apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2024-05-28T03:35:07Z"
  generateName: mongodb-7f57d869bf-
  labels:
    app: mongodb
    pod-template-hash: 7f57d869bf
  name: mongodb-7f57d869bf-4jtw8
  namespace: default
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: mongodb-7f57d869bf
    uid: 5d362d07-49d5-416b-9c3e-e52e34aad173
  resourceVersion: "68804"
  uid: a74678ce-be24-4d83-807f-53e1aa936a5d
spec:
  containers:
  - env:
    - name: MONGO_INITDB_ROOT_USERNAME
      value: rootuser
    - name: MONGO_INITDB_ROOT_PASSWORD
      value: rootpass
    image: mongo:4.4
    imagePullPolicy: IfNotPresent
    name: mongodb
    ports:
    - containerPort: 27017
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /data/db
      name: mongo-storage
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-2rb76
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: k3d-local-server-0
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: mongo-storage
    persistentVolumeClaim:
      claimName: mongo-pvc
  - name: kube-api-access-2rb76
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-05-28T03:35:13Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-05-29T01:08:35Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-05-29T01:08:35Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-05-28T03:35:13Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://5c22998b6964d77857de7c61e17b79edf31fbb31241c2ce56351fd2cb5b38343
    image: docker.io/library/mongo:4.4
    imageID: docker.io/library/mongo@sha256:52c42cbab240b3c5b1748582cc13ef46d521ddacae002bbbda645cebed270ec0
    lastState:
      terminated:
        containerID: containerd://ede9677fadfde7e15c0120db47217e1022d9018d577a6024ca2f6761dbf77fed
        exitCode: 255
        finishedAt: "2024-05-29T01:08:12Z"
        reason: Unknown
        startedAt: "2024-05-28T06:42:34Z"
    name: mongodb
    ready: true
    restartCount: 2
    started: true
    state:
      running:
        startedAt: "2024-05-29T01:08:32Z"
  hostIP: 172.28.0.3
  phase: Running
  podIP: 10.42.2.207
  podIPs:
  - ip: 10.42.2.207
  qosClass: BestEffort
  startTime: "2024-05-28T03:35:13Z"
